// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/MarketAccess.proto
// Protobuf C++ Version: 5.27.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fMarketAccess_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fMarketAccess_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fMarketAccess_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fMarketAccess_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fMarketAccess_2eproto;
namespace marketAccess {
class Confirmation;
struct ConfirmationDefaultTypeInternal;
extern ConfirmationDefaultTypeInternal _Confirmation_default_instance_;
class DeletionParameters;
struct DeletionParametersDefaultTypeInternal;
extern DeletionParametersDefaultTypeInternal _DeletionParameters_default_instance_;
class DisplayParameters;
struct DisplayParametersDefaultTypeInternal;
extern DisplayParametersDefaultTypeInternal _DisplayParameters_default_instance_;
class InsertionParameters;
struct InsertionParametersDefaultTypeInternal;
extern InsertionParametersDefaultTypeInternal _InsertionParameters_default_instance_;
class OrderBookContent;
struct OrderBookContentDefaultTypeInternal;
extern OrderBookContentDefaultTypeInternal _OrderBookContent_default_instance_;
class UpdateParameters;
struct UpdateParametersDefaultTypeInternal;
extern UpdateParametersDefaultTypeInternal _UpdateParameters_default_instance_;
}  // namespace marketAccess
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace marketAccess {
enum orderType : int {
  FillOrKill = 0,
  GoodTilCancelled = 1,
  orderType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  orderType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool orderType_IsValid(int value);
extern const uint32_t orderType_internal_data_[];
constexpr orderType orderType_MIN = static_cast<orderType>(0);
constexpr orderType orderType_MAX = static_cast<orderType>(1);
constexpr int orderType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
orderType_descriptor();
template <typename T>
const std::string& orderType_Name(T value) {
  static_assert(std::is_same<T, orderType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to orderType_Name().");
  return orderType_Name(static_cast<orderType>(value));
}
template <>
inline const std::string& orderType_Name(orderType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<orderType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool orderType_Parse(absl::string_view name, orderType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<orderType>(
      orderType_descriptor(), name, value);
}
enum orderDirection : int {
  buy = 0,
  sell = 1,
  orderDirection_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  orderDirection_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool orderDirection_IsValid(int value);
extern const uint32_t orderDirection_internal_data_[];
constexpr orderDirection orderDirection_MIN = static_cast<orderDirection>(0);
constexpr orderDirection orderDirection_MAX = static_cast<orderDirection>(1);
constexpr int orderDirection_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
orderDirection_descriptor();
template <typename T>
const std::string& orderDirection_Name(T value) {
  static_assert(std::is_same<T, orderDirection>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to orderDirection_Name().");
  return orderDirection_Name(static_cast<orderDirection>(value));
}
template <>
inline const std::string& orderDirection_Name(orderDirection value) {
  return ::google::protobuf::internal::NameOfDenseEnum<orderDirection_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool orderDirection_Parse(absl::string_view name, orderDirection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<orderDirection>(
      orderDirection_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class UpdateParameters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketAccess.UpdateParameters) */ {
 public:
  inline UpdateParameters() : UpdateParameters(nullptr) {}
  ~UpdateParameters() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateParameters(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateParameters(const UpdateParameters& from) : UpdateParameters(nullptr, from) {}
  inline UpdateParameters(UpdateParameters&& from) noexcept
      : UpdateParameters(nullptr, std::move(from)) {}
  inline UpdateParameters& operator=(const UpdateParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateParameters& operator=(UpdateParameters&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateParameters& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateParameters* internal_default_instance() {
    return reinterpret_cast<const UpdateParameters*>(
        &_UpdateParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(UpdateParameters& a, UpdateParameters& b) { a.Swap(&b); }
  inline void Swap(UpdateParameters* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateParameters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateParameters* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UpdateParameters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateParameters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateParameters& from) { UpdateParameters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateParameters* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "marketAccess.UpdateParameters"; }

 protected:
  explicit UpdateParameters(::google::protobuf::Arena* arena);
  UpdateParameters(::google::protobuf::Arena* arena, const UpdateParameters& from);
  UpdateParameters(::google::protobuf::Arena* arena, UpdateParameters&& from) noexcept
      : UpdateParameters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductIDFieldNumber = 2,
    kBoIDFieldNumber = 3,
    kUserIDFieldNumber = 1,
    kBuyOrSellFieldNumber = 6,
    kPriceFieldNumber = 4,
    kVolumeFieldNumber = 5,
    kUpdatedOrderIDFieldNumber = 8,
    kBoTypeFieldNumber = 7,
  };
  // string product_ID = 2;
  void clear_product_id() ;
  const std::string& product_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_product_id(Arg_&& arg, Args_... args);
  std::string* mutable_product_id();
  PROTOBUF_NODISCARD std::string* release_product_id();
  void set_allocated_product_id(std::string* value);

  private:
  const std::string& _internal_product_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_product_id(
      const std::string& value);
  std::string* _internal_mutable_product_id();

  public:
  // uint64 boID = 3;
  void clear_boid() ;
  ::uint64_t boid() const;
  void set_boid(::uint64_t value);

  private:
  ::uint64_t _internal_boid() const;
  void _internal_set_boid(::uint64_t value);

  public:
  // int32 userID = 1;
  void clear_userid() ;
  ::int32_t userid() const;
  void set_userid(::int32_t value);

  private:
  ::int32_t _internal_userid() const;
  void _internal_set_userid(::int32_t value);

  public:
  // .marketAccess.orderDirection buyOrSell = 6;
  void clear_buyorsell() ;
  ::marketAccess::orderDirection buyorsell() const;
  void set_buyorsell(::marketAccess::orderDirection value);

  private:
  ::marketAccess::orderDirection _internal_buyorsell() const;
  void _internal_set_buyorsell(::marketAccess::orderDirection value);

  public:
  // double price = 4;
  void clear_price() ;
  double price() const;
  void set_price(double value);

  private:
  double _internal_price() const;
  void _internal_set_price(double value);

  public:
  // double volume = 5;
  void clear_volume() ;
  double volume() const;
  void set_volume(double value);

  private:
  double _internal_volume() const;
  void _internal_set_volume(double value);

  public:
  // int64 updatedOrderID = 8;
  void clear_updatedorderid() ;
  ::int64_t updatedorderid() const;
  void set_updatedorderid(::int64_t value);

  private:
  ::int64_t _internal_updatedorderid() const;
  void _internal_set_updatedorderid(::int64_t value);

  public:
  // .marketAccess.orderType boType = 7;
  void clear_botype() ;
  ::marketAccess::orderType botype() const;
  void set_botype(::marketAccess::orderType value);

  private:
  ::marketAccess::orderType _internal_botype() const;
  void _internal_set_botype(::marketAccess::orderType value);

  public:
  // @@protoc_insertion_point(class_scope:marketAccess.UpdateParameters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      56, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateParameters_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateParameters& from_msg);
    ::google::protobuf::internal::ArenaStringPtr product_id_;
    ::uint64_t boid_;
    ::int32_t userid_;
    int buyorsell_;
    double price_;
    double volume_;
    ::int64_t updatedorderid_;
    int botype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fMarketAccess_2eproto;
};
// -------------------------------------------------------------------

class OrderBookContent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketAccess.OrderBookContent) */ {
 public:
  inline OrderBookContent() : OrderBookContent(nullptr) {}
  ~OrderBookContent() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderBookContent(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderBookContent(const OrderBookContent& from) : OrderBookContent(nullptr, from) {}
  inline OrderBookContent(OrderBookContent&& from) noexcept
      : OrderBookContent(nullptr, std::move(from)) {}
  inline OrderBookContent& operator=(const OrderBookContent& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderBookContent& operator=(OrderBookContent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderBookContent& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderBookContent* internal_default_instance() {
    return reinterpret_cast<const OrderBookContent*>(
        &_OrderBookContent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(OrderBookContent& a, OrderBookContent& b) { a.Swap(&b); }
  inline void Swap(OrderBookContent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderBookContent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderBookContent* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OrderBookContent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderBookContent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderBookContent& from) { OrderBookContent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OrderBookContent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "marketAccess.OrderBookContent"; }

 protected:
  explicit OrderBookContent(::google::protobuf::Arena* arena);
  OrderBookContent(::google::protobuf::Arena* arena, const OrderBookContent& from);
  OrderBookContent(::google::protobuf::Arena* arena, OrderBookContent&& from) noexcept
      : OrderBookContent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrderBookFieldNumber = 1,
  };
  // string orderBook = 1;
  void clear_orderbook() ;
  const std::string& orderbook() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_orderbook(Arg_&& arg, Args_... args);
  std::string* mutable_orderbook();
  PROTOBUF_NODISCARD std::string* release_orderbook();
  void set_allocated_orderbook(std::string* value);

  private:
  const std::string& _internal_orderbook() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_orderbook(
      const std::string& value);
  std::string* _internal_mutable_orderbook();

  public:
  // @@protoc_insertion_point(class_scope:marketAccess.OrderBookContent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      47, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OrderBookContent_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderBookContent& from_msg);
    ::google::protobuf::internal::ArenaStringPtr orderbook_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fMarketAccess_2eproto;
};
// -------------------------------------------------------------------

class InsertionParameters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketAccess.InsertionParameters) */ {
 public:
  inline InsertionParameters() : InsertionParameters(nullptr) {}
  ~InsertionParameters() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InsertionParameters(
      ::google::protobuf::internal::ConstantInitialized);

  inline InsertionParameters(const InsertionParameters& from) : InsertionParameters(nullptr, from) {}
  inline InsertionParameters(InsertionParameters&& from) noexcept
      : InsertionParameters(nullptr, std::move(from)) {}
  inline InsertionParameters& operator=(const InsertionParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline InsertionParameters& operator=(InsertionParameters&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InsertionParameters& default_instance() {
    return *internal_default_instance();
  }
  static inline const InsertionParameters* internal_default_instance() {
    return reinterpret_cast<const InsertionParameters*>(
        &_InsertionParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(InsertionParameters& a, InsertionParameters& b) { a.Swap(&b); }
  inline void Swap(InsertionParameters* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InsertionParameters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InsertionParameters* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<InsertionParameters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InsertionParameters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InsertionParameters& from) { InsertionParameters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InsertionParameters* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "marketAccess.InsertionParameters"; }

 protected:
  explicit InsertionParameters(::google::protobuf::Arena* arena);
  InsertionParameters(::google::protobuf::Arena* arena, const InsertionParameters& from);
  InsertionParameters(::google::protobuf::Arena* arena, InsertionParameters&& from) noexcept
      : InsertionParameters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductIDFieldNumber = 2,
    kBoIDFieldNumber = 3,
    kUserIDFieldNumber = 1,
    kBuyOrSellFieldNumber = 6,
    kPriceFieldNumber = 4,
    kVolumeFieldNumber = 5,
    kBoTypeFieldNumber = 7,
  };
  // string product_ID = 2;
  void clear_product_id() ;
  const std::string& product_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_product_id(Arg_&& arg, Args_... args);
  std::string* mutable_product_id();
  PROTOBUF_NODISCARD std::string* release_product_id();
  void set_allocated_product_id(std::string* value);

  private:
  const std::string& _internal_product_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_product_id(
      const std::string& value);
  std::string* _internal_mutable_product_id();

  public:
  // uint64 boID = 3;
  void clear_boid() ;
  ::uint64_t boid() const;
  void set_boid(::uint64_t value);

  private:
  ::uint64_t _internal_boid() const;
  void _internal_set_boid(::uint64_t value);

  public:
  // int32 userID = 1;
  void clear_userid() ;
  ::int32_t userid() const;
  void set_userid(::int32_t value);

  private:
  ::int32_t _internal_userid() const;
  void _internal_set_userid(::int32_t value);

  public:
  // .marketAccess.orderDirection buyOrSell = 6;
  void clear_buyorsell() ;
  ::marketAccess::orderDirection buyorsell() const;
  void set_buyorsell(::marketAccess::orderDirection value);

  private:
  ::marketAccess::orderDirection _internal_buyorsell() const;
  void _internal_set_buyorsell(::marketAccess::orderDirection value);

  public:
  // double price = 4;
  void clear_price() ;
  double price() const;
  void set_price(double value);

  private:
  double _internal_price() const;
  void _internal_set_price(double value);

  public:
  // double volume = 5;
  void clear_volume() ;
  double volume() const;
  void set_volume(double value);

  private:
  double _internal_volume() const;
  void _internal_set_volume(double value);

  public:
  // .marketAccess.orderType boType = 7;
  void clear_botype() ;
  ::marketAccess::orderType botype() const;
  void set_botype(::marketAccess::orderType value);

  private:
  ::marketAccess::orderType _internal_botype() const;
  void _internal_set_botype(::marketAccess::orderType value);

  public:
  // @@protoc_insertion_point(class_scope:marketAccess.InsertionParameters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      51, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_InsertionParameters_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InsertionParameters& from_msg);
    ::google::protobuf::internal::ArenaStringPtr product_id_;
    ::uint64_t boid_;
    ::int32_t userid_;
    int buyorsell_;
    double price_;
    double volume_;
    int botype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fMarketAccess_2eproto;
};
// -------------------------------------------------------------------

class DisplayParameters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketAccess.DisplayParameters) */ {
 public:
  inline DisplayParameters() : DisplayParameters(nullptr) {}
  ~DisplayParameters() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DisplayParameters(
      ::google::protobuf::internal::ConstantInitialized);

  inline DisplayParameters(const DisplayParameters& from) : DisplayParameters(nullptr, from) {}
  inline DisplayParameters(DisplayParameters&& from) noexcept
      : DisplayParameters(nullptr, std::move(from)) {}
  inline DisplayParameters& operator=(const DisplayParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline DisplayParameters& operator=(DisplayParameters&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DisplayParameters& default_instance() {
    return *internal_default_instance();
  }
  static inline const DisplayParameters* internal_default_instance() {
    return reinterpret_cast<const DisplayParameters*>(
        &_DisplayParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(DisplayParameters& a, DisplayParameters& b) { a.Swap(&b); }
  inline void Swap(DisplayParameters* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DisplayParameters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DisplayParameters* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<DisplayParameters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DisplayParameters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DisplayParameters& from) { DisplayParameters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DisplayParameters* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "marketAccess.DisplayParameters"; }

 protected:
  explicit DisplayParameters(::google::protobuf::Arena* arena);
  DisplayParameters(::google::protobuf::Arena* arena, const DisplayParameters& from);
  DisplayParameters(::google::protobuf::Arena* arena, DisplayParameters&& from) noexcept
      : DisplayParameters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductIDFieldNumber = 1,
    kRequestNumberFieldNumber = 2,
  };
  // string product_ID = 1;
  void clear_product_id() ;
  const std::string& product_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_product_id(Arg_&& arg, Args_... args);
  std::string* mutable_product_id();
  PROTOBUF_NODISCARD std::string* release_product_id();
  void set_allocated_product_id(std::string* value);

  private:
  const std::string& _internal_product_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_product_id(
      const std::string& value);
  std::string* _internal_mutable_product_id();

  public:
  // string requestNumber = 2;
  void clear_requestnumber() ;
  const std::string& requestnumber() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_requestnumber(Arg_&& arg, Args_... args);
  std::string* mutable_requestnumber();
  PROTOBUF_NODISCARD std::string* release_requestnumber();
  void set_allocated_requestnumber(std::string* value);

  private:
  const std::string& _internal_requestnumber() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_requestnumber(
      const std::string& value);
  std::string* _internal_mutable_requestnumber();

  public:
  // @@protoc_insertion_point(class_scope:marketAccess.DisplayParameters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      62, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DisplayParameters_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DisplayParameters& from_msg);
    ::google::protobuf::internal::ArenaStringPtr product_id_;
    ::google::protobuf::internal::ArenaStringPtr requestnumber_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fMarketAccess_2eproto;
};
// -------------------------------------------------------------------

class DeletionParameters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketAccess.DeletionParameters) */ {
 public:
  inline DeletionParameters() : DeletionParameters(nullptr) {}
  ~DeletionParameters() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeletionParameters(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeletionParameters(const DeletionParameters& from) : DeletionParameters(nullptr, from) {}
  inline DeletionParameters(DeletionParameters&& from) noexcept
      : DeletionParameters(nullptr, std::move(from)) {}
  inline DeletionParameters& operator=(const DeletionParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeletionParameters& operator=(DeletionParameters&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeletionParameters& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeletionParameters* internal_default_instance() {
    return reinterpret_cast<const DeletionParameters*>(
        &_DeletionParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(DeletionParameters& a, DeletionParameters& b) { a.Swap(&b); }
  inline void Swap(DeletionParameters* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeletionParameters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeletionParameters* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<DeletionParameters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeletionParameters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeletionParameters& from) { DeletionParameters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeletionParameters* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "marketAccess.DeletionParameters"; }

 protected:
  explicit DeletionParameters(::google::protobuf::Arena* arena);
  DeletionParameters(::google::protobuf::Arena* arena, const DeletionParameters& from);
  DeletionParameters(::google::protobuf::Arena* arena, DeletionParameters&& from) noexcept
      : DeletionParameters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductIDFieldNumber = 2,
    kBoIDFieldNumber = 3,
    kUserIDFieldNumber = 1,
  };
  // string product_ID = 2;
  void clear_product_id() ;
  const std::string& product_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_product_id(Arg_&& arg, Args_... args);
  std::string* mutable_product_id();
  PROTOBUF_NODISCARD std::string* release_product_id();
  void set_allocated_product_id(std::string* value);

  private:
  const std::string& _internal_product_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_product_id(
      const std::string& value);
  std::string* _internal_mutable_product_id();

  public:
  // uint64 boID = 3;
  void clear_boid() ;
  ::uint64_t boid() const;
  void set_boid(::uint64_t value);

  private:
  ::uint64_t _internal_boid() const;
  void _internal_set_boid(::uint64_t value);

  public:
  // int32 userID = 1;
  void clear_userid() ;
  ::int32_t userid() const;
  void set_userid(::int32_t value);

  private:
  ::int32_t _internal_userid() const;
  void _internal_set_userid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:marketAccess.DeletionParameters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DeletionParameters_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeletionParameters& from_msg);
    ::google::protobuf::internal::ArenaStringPtr product_id_;
    ::uint64_t boid_;
    ::int32_t userid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fMarketAccess_2eproto;
};
// -------------------------------------------------------------------

class Confirmation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketAccess.Confirmation) */ {
 public:
  inline Confirmation() : Confirmation(nullptr) {}
  ~Confirmation() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Confirmation(
      ::google::protobuf::internal::ConstantInitialized);

  inline Confirmation(const Confirmation& from) : Confirmation(nullptr, from) {}
  inline Confirmation(Confirmation&& from) noexcept
      : Confirmation(nullptr, std::move(from)) {}
  inline Confirmation& operator=(const Confirmation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Confirmation& operator=(Confirmation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Confirmation& default_instance() {
    return *internal_default_instance();
  }
  static inline const Confirmation* internal_default_instance() {
    return reinterpret_cast<const Confirmation*>(
        &_Confirmation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Confirmation& a, Confirmation& b) { a.Swap(&b); }
  inline void Swap(Confirmation* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Confirmation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Confirmation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Confirmation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Confirmation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Confirmation& from) { Confirmation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Confirmation* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "marketAccess.Confirmation"; }

 protected:
  explicit Confirmation(::google::protobuf::Arena* arena);
  Confirmation(::google::protobuf::Arena* arena, const Confirmation& from);
  Confirmation(::google::protobuf::Arena* arena, Confirmation&& from) noexcept
      : Confirmation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCommentFieldNumber = 3,
    kBoIDFieldNumber = 2,
    kValidationFieldNumber = 1,
  };
  // optional string comment = 3;
  bool has_comment() const;
  void clear_comment() ;
  const std::string& comment() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_comment(Arg_&& arg, Args_... args);
  std::string* mutable_comment();
  PROTOBUF_NODISCARD std::string* release_comment();
  void set_allocated_comment(std::string* value);

  private:
  const std::string& _internal_comment() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_comment(
      const std::string& value);
  std::string* _internal_mutable_comment();

  public:
  // optional uint64 boID = 2;
  bool has_boid() const;
  void clear_boid() ;
  ::uint64_t boid() const;
  void set_boid(::uint64_t value);

  private:
  ::uint64_t _internal_boid() const;
  void _internal_set_boid(::uint64_t value);

  public:
  // bool validation = 1;
  void clear_validation() ;
  bool validation() const;
  void set_validation(bool value);

  private:
  bool _internal_validation() const;
  void _internal_set_validation(bool value);

  public:
  // @@protoc_insertion_point(class_scope:marketAccess.Confirmation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      41, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Confirmation_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Confirmation& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr comment_;
    ::uint64_t boid_;
    bool validation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fMarketAccess_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DisplayParameters

// string product_ID = 1;
inline void DisplayParameters::clear_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_.ClearToEmpty();
}
inline const std::string& DisplayParameters::product_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.DisplayParameters.product_ID)
  return _internal_product_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DisplayParameters::set_product_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.DisplayParameters.product_ID)
}
inline std::string* DisplayParameters::mutable_product_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_product_id();
  // @@protoc_insertion_point(field_mutable:marketAccess.DisplayParameters.product_ID)
  return _s;
}
inline const std::string& DisplayParameters::_internal_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_id_.Get();
}
inline void DisplayParameters::_internal_set_product_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_.Set(value, GetArena());
}
inline std::string* DisplayParameters::_internal_mutable_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.product_id_.Mutable( GetArena());
}
inline std::string* DisplayParameters::release_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.DisplayParameters.product_ID)
  return _impl_.product_id_.Release();
}
inline void DisplayParameters::set_allocated_product_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.product_id_.IsDefault()) {
          _impl_.product_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.DisplayParameters.product_ID)
}

// string requestNumber = 2;
inline void DisplayParameters::clear_requestnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requestnumber_.ClearToEmpty();
}
inline const std::string& DisplayParameters::requestnumber() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.DisplayParameters.requestNumber)
  return _internal_requestnumber();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DisplayParameters::set_requestnumber(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requestnumber_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.DisplayParameters.requestNumber)
}
inline std::string* DisplayParameters::mutable_requestnumber() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_requestnumber();
  // @@protoc_insertion_point(field_mutable:marketAccess.DisplayParameters.requestNumber)
  return _s;
}
inline const std::string& DisplayParameters::_internal_requestnumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requestnumber_.Get();
}
inline void DisplayParameters::_internal_set_requestnumber(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requestnumber_.Set(value, GetArena());
}
inline std::string* DisplayParameters::_internal_mutable_requestnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.requestnumber_.Mutable( GetArena());
}
inline std::string* DisplayParameters::release_requestnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.DisplayParameters.requestNumber)
  return _impl_.requestnumber_.Release();
}
inline void DisplayParameters::set_allocated_requestnumber(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requestnumber_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.requestnumber_.IsDefault()) {
          _impl_.requestnumber_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.DisplayParameters.requestNumber)
}

// -------------------------------------------------------------------

// OrderBookContent

// string orderBook = 1;
inline void OrderBookContent::clear_orderbook() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.orderbook_.ClearToEmpty();
}
inline const std::string& OrderBookContent::orderbook() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.OrderBookContent.orderBook)
  return _internal_orderbook();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderBookContent::set_orderbook(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.orderbook_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.OrderBookContent.orderBook)
}
inline std::string* OrderBookContent::mutable_orderbook() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_orderbook();
  // @@protoc_insertion_point(field_mutable:marketAccess.OrderBookContent.orderBook)
  return _s;
}
inline const std::string& OrderBookContent::_internal_orderbook() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.orderbook_.Get();
}
inline void OrderBookContent::_internal_set_orderbook(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.orderbook_.Set(value, GetArena());
}
inline std::string* OrderBookContent::_internal_mutable_orderbook() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.orderbook_.Mutable( GetArena());
}
inline std::string* OrderBookContent::release_orderbook() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.OrderBookContent.orderBook)
  return _impl_.orderbook_.Release();
}
inline void OrderBookContent::set_allocated_orderbook(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.orderbook_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.orderbook_.IsDefault()) {
          _impl_.orderbook_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.OrderBookContent.orderBook)
}

// -------------------------------------------------------------------

// DeletionParameters

// int32 userID = 1;
inline void DeletionParameters::clear_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = 0;
}
inline ::int32_t DeletionParameters::userid() const {
  // @@protoc_insertion_point(field_get:marketAccess.DeletionParameters.userID)
  return _internal_userid();
}
inline void DeletionParameters::set_userid(::int32_t value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:marketAccess.DeletionParameters.userID)
}
inline ::int32_t DeletionParameters::_internal_userid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.userid_;
}
inline void DeletionParameters::_internal_set_userid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = value;
}

// string product_ID = 2;
inline void DeletionParameters::clear_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_.ClearToEmpty();
}
inline const std::string& DeletionParameters::product_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.DeletionParameters.product_ID)
  return _internal_product_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeletionParameters::set_product_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.DeletionParameters.product_ID)
}
inline std::string* DeletionParameters::mutable_product_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_product_id();
  // @@protoc_insertion_point(field_mutable:marketAccess.DeletionParameters.product_ID)
  return _s;
}
inline const std::string& DeletionParameters::_internal_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_id_.Get();
}
inline void DeletionParameters::_internal_set_product_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_.Set(value, GetArena());
}
inline std::string* DeletionParameters::_internal_mutable_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.product_id_.Mutable( GetArena());
}
inline std::string* DeletionParameters::release_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.DeletionParameters.product_ID)
  return _impl_.product_id_.Release();
}
inline void DeletionParameters::set_allocated_product_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.product_id_.IsDefault()) {
          _impl_.product_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.DeletionParameters.product_ID)
}

// uint64 boID = 3;
inline void DeletionParameters::clear_boid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = ::uint64_t{0u};
}
inline ::uint64_t DeletionParameters::boid() const {
  // @@protoc_insertion_point(field_get:marketAccess.DeletionParameters.boID)
  return _internal_boid();
}
inline void DeletionParameters::set_boid(::uint64_t value) {
  _internal_set_boid(value);
  // @@protoc_insertion_point(field_set:marketAccess.DeletionParameters.boID)
}
inline ::uint64_t DeletionParameters::_internal_boid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.boid_;
}
inline void DeletionParameters::_internal_set_boid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = value;
}

// -------------------------------------------------------------------

// InsertionParameters

// int32 userID = 1;
inline void InsertionParameters::clear_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = 0;
}
inline ::int32_t InsertionParameters::userid() const {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionParameters.userID)
  return _internal_userid();
}
inline void InsertionParameters::set_userid(::int32_t value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:marketAccess.InsertionParameters.userID)
}
inline ::int32_t InsertionParameters::_internal_userid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.userid_;
}
inline void InsertionParameters::_internal_set_userid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = value;
}

// string product_ID = 2;
inline void InsertionParameters::clear_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_.ClearToEmpty();
}
inline const std::string& InsertionParameters::product_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionParameters.product_ID)
  return _internal_product_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InsertionParameters::set_product_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.InsertionParameters.product_ID)
}
inline std::string* InsertionParameters::mutable_product_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_product_id();
  // @@protoc_insertion_point(field_mutable:marketAccess.InsertionParameters.product_ID)
  return _s;
}
inline const std::string& InsertionParameters::_internal_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_id_.Get();
}
inline void InsertionParameters::_internal_set_product_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_.Set(value, GetArena());
}
inline std::string* InsertionParameters::_internal_mutable_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.product_id_.Mutable( GetArena());
}
inline std::string* InsertionParameters::release_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.InsertionParameters.product_ID)
  return _impl_.product_id_.Release();
}
inline void InsertionParameters::set_allocated_product_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.product_id_.IsDefault()) {
          _impl_.product_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.InsertionParameters.product_ID)
}

// uint64 boID = 3;
inline void InsertionParameters::clear_boid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = ::uint64_t{0u};
}
inline ::uint64_t InsertionParameters::boid() const {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionParameters.boID)
  return _internal_boid();
}
inline void InsertionParameters::set_boid(::uint64_t value) {
  _internal_set_boid(value);
  // @@protoc_insertion_point(field_set:marketAccess.InsertionParameters.boID)
}
inline ::uint64_t InsertionParameters::_internal_boid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.boid_;
}
inline void InsertionParameters::_internal_set_boid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = value;
}

// double price = 4;
inline void InsertionParameters::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
}
inline double InsertionParameters::price() const {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionParameters.price)
  return _internal_price();
}
inline void InsertionParameters::set_price(double value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:marketAccess.InsertionParameters.price)
}
inline double InsertionParameters::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void InsertionParameters::_internal_set_price(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// double volume = 5;
inline void InsertionParameters::clear_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = 0;
}
inline double InsertionParameters::volume() const {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionParameters.volume)
  return _internal_volume();
}
inline void InsertionParameters::set_volume(double value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:marketAccess.InsertionParameters.volume)
}
inline double InsertionParameters::_internal_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volume_;
}
inline void InsertionParameters::_internal_set_volume(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = value;
}

// .marketAccess.orderDirection buyOrSell = 6;
inline void InsertionParameters::clear_buyorsell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buyorsell_ = 0;
}
inline ::marketAccess::orderDirection InsertionParameters::buyorsell() const {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionParameters.buyOrSell)
  return _internal_buyorsell();
}
inline void InsertionParameters::set_buyorsell(::marketAccess::orderDirection value) {
  _internal_set_buyorsell(value);
  // @@protoc_insertion_point(field_set:marketAccess.InsertionParameters.buyOrSell)
}
inline ::marketAccess::orderDirection InsertionParameters::_internal_buyorsell() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::marketAccess::orderDirection>(_impl_.buyorsell_);
}
inline void InsertionParameters::_internal_set_buyorsell(::marketAccess::orderDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buyorsell_ = value;
}

// .marketAccess.orderType boType = 7;
inline void InsertionParameters::clear_botype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.botype_ = 0;
}
inline ::marketAccess::orderType InsertionParameters::botype() const {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionParameters.boType)
  return _internal_botype();
}
inline void InsertionParameters::set_botype(::marketAccess::orderType value) {
  _internal_set_botype(value);
  // @@protoc_insertion_point(field_set:marketAccess.InsertionParameters.boType)
}
inline ::marketAccess::orderType InsertionParameters::_internal_botype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::marketAccess::orderType>(_impl_.botype_);
}
inline void InsertionParameters::_internal_set_botype(::marketAccess::orderType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.botype_ = value;
}

// -------------------------------------------------------------------

// UpdateParameters

// int32 userID = 1;
inline void UpdateParameters::clear_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = 0;
}
inline ::int32_t UpdateParameters::userid() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateParameters.userID)
  return _internal_userid();
}
inline void UpdateParameters::set_userid(::int32_t value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateParameters.userID)
}
inline ::int32_t UpdateParameters::_internal_userid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.userid_;
}
inline void UpdateParameters::_internal_set_userid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = value;
}

// string product_ID = 2;
inline void UpdateParameters::clear_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_.ClearToEmpty();
}
inline const std::string& UpdateParameters::product_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateParameters.product_ID)
  return _internal_product_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateParameters::set_product_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.UpdateParameters.product_ID)
}
inline std::string* UpdateParameters::mutable_product_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_product_id();
  // @@protoc_insertion_point(field_mutable:marketAccess.UpdateParameters.product_ID)
  return _s;
}
inline const std::string& UpdateParameters::_internal_product_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_id_.Get();
}
inline void UpdateParameters::_internal_set_product_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_.Set(value, GetArena());
}
inline std::string* UpdateParameters::_internal_mutable_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.product_id_.Mutable( GetArena());
}
inline std::string* UpdateParameters::release_product_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.UpdateParameters.product_ID)
  return _impl_.product_id_.Release();
}
inline void UpdateParameters::set_allocated_product_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.product_id_.IsDefault()) {
          _impl_.product_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.UpdateParameters.product_ID)
}

// uint64 boID = 3;
inline void UpdateParameters::clear_boid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = ::uint64_t{0u};
}
inline ::uint64_t UpdateParameters::boid() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateParameters.boID)
  return _internal_boid();
}
inline void UpdateParameters::set_boid(::uint64_t value) {
  _internal_set_boid(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateParameters.boID)
}
inline ::uint64_t UpdateParameters::_internal_boid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.boid_;
}
inline void UpdateParameters::_internal_set_boid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = value;
}

// double price = 4;
inline void UpdateParameters::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
}
inline double UpdateParameters::price() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateParameters.price)
  return _internal_price();
}
inline void UpdateParameters::set_price(double value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateParameters.price)
}
inline double UpdateParameters::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void UpdateParameters::_internal_set_price(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// double volume = 5;
inline void UpdateParameters::clear_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = 0;
}
inline double UpdateParameters::volume() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateParameters.volume)
  return _internal_volume();
}
inline void UpdateParameters::set_volume(double value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateParameters.volume)
}
inline double UpdateParameters::_internal_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volume_;
}
inline void UpdateParameters::_internal_set_volume(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = value;
}

// .marketAccess.orderDirection buyOrSell = 6;
inline void UpdateParameters::clear_buyorsell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buyorsell_ = 0;
}
inline ::marketAccess::orderDirection UpdateParameters::buyorsell() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateParameters.buyOrSell)
  return _internal_buyorsell();
}
inline void UpdateParameters::set_buyorsell(::marketAccess::orderDirection value) {
  _internal_set_buyorsell(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateParameters.buyOrSell)
}
inline ::marketAccess::orderDirection UpdateParameters::_internal_buyorsell() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::marketAccess::orderDirection>(_impl_.buyorsell_);
}
inline void UpdateParameters::_internal_set_buyorsell(::marketAccess::orderDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buyorsell_ = value;
}

// .marketAccess.orderType boType = 7;
inline void UpdateParameters::clear_botype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.botype_ = 0;
}
inline ::marketAccess::orderType UpdateParameters::botype() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateParameters.boType)
  return _internal_botype();
}
inline void UpdateParameters::set_botype(::marketAccess::orderType value) {
  _internal_set_botype(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateParameters.boType)
}
inline ::marketAccess::orderType UpdateParameters::_internal_botype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::marketAccess::orderType>(_impl_.botype_);
}
inline void UpdateParameters::_internal_set_botype(::marketAccess::orderType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.botype_ = value;
}

// int64 updatedOrderID = 8;
inline void UpdateParameters::clear_updatedorderid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedorderid_ = ::int64_t{0};
}
inline ::int64_t UpdateParameters::updatedorderid() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateParameters.updatedOrderID)
  return _internal_updatedorderid();
}
inline void UpdateParameters::set_updatedorderid(::int64_t value) {
  _internal_set_updatedorderid(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateParameters.updatedOrderID)
}
inline ::int64_t UpdateParameters::_internal_updatedorderid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatedorderid_;
}
inline void UpdateParameters::_internal_set_updatedorderid(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedorderid_ = value;
}

// -------------------------------------------------------------------

// Confirmation

// bool validation = 1;
inline void Confirmation::clear_validation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_ = false;
}
inline bool Confirmation::validation() const {
  // @@protoc_insertion_point(field_get:marketAccess.Confirmation.validation)
  return _internal_validation();
}
inline void Confirmation::set_validation(bool value) {
  _internal_set_validation(value);
  // @@protoc_insertion_point(field_set:marketAccess.Confirmation.validation)
}
inline bool Confirmation::_internal_validation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validation_;
}
inline void Confirmation::_internal_set_validation(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_ = value;
}

// optional uint64 boID = 2;
inline bool Confirmation::has_boid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Confirmation::clear_boid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t Confirmation::boid() const {
  // @@protoc_insertion_point(field_get:marketAccess.Confirmation.boID)
  return _internal_boid();
}
inline void Confirmation::set_boid(::uint64_t value) {
  _internal_set_boid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:marketAccess.Confirmation.boID)
}
inline ::uint64_t Confirmation::_internal_boid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.boid_;
}
inline void Confirmation::_internal_set_boid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = value;
}

// optional string comment = 3;
inline bool Confirmation::has_comment() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Confirmation::clear_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Confirmation::comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.Confirmation.comment)
  return _internal_comment();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Confirmation::set_comment(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.comment_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.Confirmation.comment)
}
inline std::string* Confirmation::mutable_comment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_comment();
  // @@protoc_insertion_point(field_mutable:marketAccess.Confirmation.comment)
  return _s;
}
inline const std::string& Confirmation::_internal_comment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comment_.Get();
}
inline void Confirmation::_internal_set_comment(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.comment_.Set(value, GetArena());
}
inline std::string* Confirmation::_internal_mutable_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.comment_.Mutable( GetArena());
}
inline std::string* Confirmation::release_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.Confirmation.comment)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.comment_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.comment_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Confirmation::set_allocated_comment(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.comment_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.comment_.IsDefault()) {
          _impl_.comment_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.Confirmation.comment)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace marketAccess


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::marketAccess::orderType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::marketAccess::orderType>() {
  return ::marketAccess::orderType_descriptor();
}
template <>
struct is_proto_enum<::marketAccess::orderDirection> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::marketAccess::orderDirection>() {
  return ::marketAccess::orderDirection_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_proto_2fMarketAccess_2eproto_2epb_2eh
