// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/MarketAccess.proto
// Protobuf C++ Version: 5.28.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fMarketAccess_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fMarketAccess_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fMarketAccess_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fMarketAccess_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fMarketAccess_2eproto;
namespace marketAccess {
class DeletionConfirmation;
struct DeletionConfirmationDefaultTypeInternal;
extern DeletionConfirmationDefaultTypeInternal _DeletionConfirmation_default_instance_;
class DeletionParameters;
struct DeletionParametersDefaultTypeInternal;
extern DeletionParametersDefaultTypeInternal _DeletionParameters_default_instance_;
class DisplayParameters;
struct DisplayParametersDefaultTypeInternal;
extern DisplayParametersDefaultTypeInternal _DisplayParameters_default_instance_;
class InsertionConfirmation;
struct InsertionConfirmationDefaultTypeInternal;
extern InsertionConfirmationDefaultTypeInternal _InsertionConfirmation_default_instance_;
class InsertionParameters;
struct InsertionParametersDefaultTypeInternal;
extern InsertionParametersDefaultTypeInternal _InsertionParameters_default_instance_;
class OrderBookContent;
struct OrderBookContentDefaultTypeInternal;
extern OrderBookContentDefaultTypeInternal _OrderBookContent_default_instance_;
class UpdateConfirmation;
struct UpdateConfirmationDefaultTypeInternal;
extern UpdateConfirmationDefaultTypeInternal _UpdateConfirmation_default_instance_;
class UpdateParameters;
struct UpdateParametersDefaultTypeInternal;
extern UpdateParametersDefaultTypeInternal _UpdateParameters_default_instance_;
}  // namespace marketAccess
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace marketAccess {
enum orderType : int {
  FILL_OR_KILL = 0,
  GOOD_TIL_CANCELLED = 1,
  orderType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  orderType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool orderType_IsValid(int value);
extern const uint32_t orderType_internal_data_[];
constexpr orderType orderType_MIN = static_cast<orderType>(0);
constexpr orderType orderType_MAX = static_cast<orderType>(1);
constexpr int orderType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
orderType_descriptor();
template <typename T>
const std::string& orderType_Name(T value) {
  static_assert(std::is_same<T, orderType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to orderType_Name().");
  return orderType_Name(static_cast<orderType>(value));
}
template <>
inline const std::string& orderType_Name(orderType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<orderType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool orderType_Parse(absl::string_view name, orderType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<orderType>(
      orderType_descriptor(), name, value);
}
enum orderDirection : int {
  BUY = 0,
  SELL = 1,
  orderDirection_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  orderDirection_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool orderDirection_IsValid(int value);
extern const uint32_t orderDirection_internal_data_[];
constexpr orderDirection orderDirection_MIN = static_cast<orderDirection>(0);
constexpr orderDirection orderDirection_MAX = static_cast<orderDirection>(1);
constexpr int orderDirection_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
orderDirection_descriptor();
template <typename T>
const std::string& orderDirection_Name(T value) {
  static_assert(std::is_same<T, orderDirection>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to orderDirection_Name().");
  return orderDirection_Name(static_cast<orderDirection>(value));
}
template <>
inline const std::string& orderDirection_Name(orderDirection value) {
  return ::google::protobuf::internal::NameOfDenseEnum<orderDirection_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool orderDirection_Parse(absl::string_view name, orderDirection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<orderDirection>(
      orderDirection_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class UpdateParameters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketAccess.UpdateParameters) */ {
 public:
  inline UpdateParameters() : UpdateParameters(nullptr) {}
  ~UpdateParameters() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateParameters(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateParameters(const UpdateParameters& from) : UpdateParameters(nullptr, from) {}
  inline UpdateParameters(UpdateParameters&& from) noexcept
      : UpdateParameters(nullptr, std::move(from)) {}
  inline UpdateParameters& operator=(const UpdateParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateParameters& operator=(UpdateParameters&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateParameters& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateParameters* internal_default_instance() {
    return reinterpret_cast<const UpdateParameters*>(
        &_UpdateParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(UpdateParameters& a, UpdateParameters& b) { a.Swap(&b); }
  inline void Swap(UpdateParameters* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateParameters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateParameters* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<UpdateParameters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateParameters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateParameters& from) { UpdateParameters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateParameters* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "marketAccess.UpdateParameters"; }

 protected:
  explicit UpdateParameters(::google::protobuf::Arena* arena);
  UpdateParameters(::google::protobuf::Arena* arena, const UpdateParameters& from);
  UpdateParameters(::google::protobuf::Arena* arena, UpdateParameters&& from) noexcept
      : UpdateParameters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUseridFieldNumber = 2,
    kInfoFieldNumber = 1,
    kBoidFieldNumber = 3,
    kPriceFieldNumber = 4,
    kVolumeFieldNumber = 5,
    kBuyOrSellFieldNumber = 6,
    kBoTypeFieldNumber = 7,
    kVersionFieldNumber = 8,
  };
  // string userid = 2;
  void clear_userid() ;
  const std::string& userid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_userid(Arg_&& arg, Args_... args);
  std::string* mutable_userid();
  PROTOBUF_NODISCARD std::string* release_userid();
  void set_allocated_userid(std::string* value);

  private:
  const std::string& _internal_userid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_userid(
      const std::string& value);
  std::string* _internal_mutable_userid();

  public:
  // uint64 info = 1;
  void clear_info() ;
  ::uint64_t info() const;
  void set_info(::uint64_t value);

  private:
  ::uint64_t _internal_info() const;
  void _internal_set_info(::uint64_t value);

  public:
  // uint64 boid = 3;
  void clear_boid() ;
  ::uint64_t boid() const;
  void set_boid(::uint64_t value);

  private:
  ::uint64_t _internal_boid() const;
  void _internal_set_boid(::uint64_t value);

  public:
  // double price = 4;
  void clear_price() ;
  double price() const;
  void set_price(double value);

  private:
  double _internal_price() const;
  void _internal_set_price(double value);

  public:
  // double volume = 5;
  void clear_volume() ;
  double volume() const;
  void set_volume(double value);

  private:
  double _internal_volume() const;
  void _internal_set_volume(double value);

  public:
  // .marketAccess.orderDirection buyOrSell = 6;
  void clear_buyorsell() ;
  ::marketAccess::orderDirection buyorsell() const;
  void set_buyorsell(::marketAccess::orderDirection value);

  private:
  ::marketAccess::orderDirection _internal_buyorsell() const;
  void _internal_set_buyorsell(::marketAccess::orderDirection value);

  public:
  // .marketAccess.orderType boType = 7;
  void clear_botype() ;
  ::marketAccess::orderType botype() const;
  void set_botype(::marketAccess::orderType value);

  private:
  ::marketAccess::orderType _internal_botype() const;
  void _internal_set_botype(::marketAccess::orderType value);

  public:
  // uint32 version = 8;
  void clear_version() ;
  ::uint32_t version() const;
  void set_version(::uint32_t value);

  private:
  ::uint32_t _internal_version() const;
  void _internal_set_version(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:marketAccess.UpdateParameters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      52, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateParameters_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateParameters& from_msg);
    ::google::protobuf::internal::ArenaStringPtr userid_;
    ::uint64_t info_;
    ::uint64_t boid_;
    double price_;
    double volume_;
    int buyorsell_;
    int botype_;
    ::uint32_t version_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fMarketAccess_2eproto;
};
// -------------------------------------------------------------------

class UpdateConfirmation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketAccess.UpdateConfirmation) */ {
 public:
  inline UpdateConfirmation() : UpdateConfirmation(nullptr) {}
  ~UpdateConfirmation() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateConfirmation(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateConfirmation(const UpdateConfirmation& from) : UpdateConfirmation(nullptr, from) {}
  inline UpdateConfirmation(UpdateConfirmation&& from) noexcept
      : UpdateConfirmation(nullptr, std::move(from)) {}
  inline UpdateConfirmation& operator=(const UpdateConfirmation& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateConfirmation& operator=(UpdateConfirmation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateConfirmation& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateConfirmation* internal_default_instance() {
    return reinterpret_cast<const UpdateConfirmation*>(
        &_UpdateConfirmation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(UpdateConfirmation& a, UpdateConfirmation& b) { a.Swap(&b); }
  inline void Swap(UpdateConfirmation* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateConfirmation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateConfirmation* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<UpdateConfirmation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateConfirmation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateConfirmation& from) { UpdateConfirmation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateConfirmation* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "marketAccess.UpdateConfirmation"; }

 protected:
  explicit UpdateConfirmation(::google::protobuf::Arena* arena);
  UpdateConfirmation(::google::protobuf::Arena* arena, const UpdateConfirmation& from);
  UpdateConfirmation(::google::protobuf::Arena* arena, UpdateConfirmation&& from) noexcept
      : UpdateConfirmation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfoFieldNumber = 1,
    kProductFieldNumber = 7,
    kCommentFieldNumber = 8,
    kBoidFieldNumber = 3,
    kValidationFieldNumber = 2,
    kVersionFieldNumber = 4,
    kPriceFieldNumber = 5,
    kVolumeFieldNumber = 6,
  };
  // string info = 1;
  void clear_info() ;
  const std::string& info() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_info(Arg_&& arg, Args_... args);
  std::string* mutable_info();
  PROTOBUF_NODISCARD std::string* release_info();
  void set_allocated_info(std::string* value);

  private:
  const std::string& _internal_info() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_info(
      const std::string& value);
  std::string* _internal_mutable_info();

  public:
  // string product = 7;
  void clear_product() ;
  const std::string& product() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_product(Arg_&& arg, Args_... args);
  std::string* mutable_product();
  PROTOBUF_NODISCARD std::string* release_product();
  void set_allocated_product(std::string* value);

  private:
  const std::string& _internal_product() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_product(
      const std::string& value);
  std::string* _internal_mutable_product();

  public:
  // optional string comment = 8;
  bool has_comment() const;
  void clear_comment() ;
  const std::string& comment() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_comment(Arg_&& arg, Args_... args);
  std::string* mutable_comment();
  PROTOBUF_NODISCARD std::string* release_comment();
  void set_allocated_comment(std::string* value);

  private:
  const std::string& _internal_comment() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_comment(
      const std::string& value);
  std::string* _internal_mutable_comment();

  public:
  // uint64 boid = 3;
  void clear_boid() ;
  ::uint64_t boid() const;
  void set_boid(::uint64_t value);

  private:
  ::uint64_t _internal_boid() const;
  void _internal_set_boid(::uint64_t value);

  public:
  // bool validation = 2;
  void clear_validation() ;
  bool validation() const;
  void set_validation(bool value);

  private:
  bool _internal_validation() const;
  void _internal_set_validation(bool value);

  public:
  // uint32 version = 4;
  void clear_version() ;
  ::uint32_t version() const;
  void set_version(::uint32_t value);

  private:
  ::uint32_t _internal_version() const;
  void _internal_set_version(::uint32_t value);

  public:
  // double price = 5;
  void clear_price() ;
  double price() const;
  void set_price(double value);

  private:
  double _internal_price() const;
  void _internal_set_price(double value);

  public:
  // double volume = 6;
  void clear_volume() ;
  double volume() const;
  void set_volume(double value);

  private:
  double _internal_volume() const;
  void _internal_set_volume(double value);

  public:
  // @@protoc_insertion_point(class_scope:marketAccess.UpdateConfirmation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      66, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateConfirmation_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateConfirmation& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr info_;
    ::google::protobuf::internal::ArenaStringPtr product_;
    ::google::protobuf::internal::ArenaStringPtr comment_;
    ::uint64_t boid_;
    bool validation_;
    ::uint32_t version_;
    double price_;
    double volume_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fMarketAccess_2eproto;
};
// -------------------------------------------------------------------

class OrderBookContent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketAccess.OrderBookContent) */ {
 public:
  inline OrderBookContent() : OrderBookContent(nullptr) {}
  ~OrderBookContent() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderBookContent(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderBookContent(const OrderBookContent& from) : OrderBookContent(nullptr, from) {}
  inline OrderBookContent(OrderBookContent&& from) noexcept
      : OrderBookContent(nullptr, std::move(from)) {}
  inline OrderBookContent& operator=(const OrderBookContent& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderBookContent& operator=(OrderBookContent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderBookContent& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderBookContent* internal_default_instance() {
    return reinterpret_cast<const OrderBookContent*>(
        &_OrderBookContent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(OrderBookContent& a, OrderBookContent& b) { a.Swap(&b); }
  inline void Swap(OrderBookContent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderBookContent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderBookContent* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<OrderBookContent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderBookContent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderBookContent& from) { OrderBookContent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OrderBookContent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "marketAccess.OrderBookContent"; }

 protected:
  explicit OrderBookContent(::google::protobuf::Arena* arena);
  OrderBookContent(::google::protobuf::Arena* arena, const OrderBookContent& from);
  OrderBookContent(::google::protobuf::Arena* arena, OrderBookContent&& from) noexcept
      : OrderBookContent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfoFieldNumber = 1,
    kOrderbookFieldNumber = 3,
    kProductFieldNumber = 4,
    kCommentFieldNumber = 5,
    kValidationFieldNumber = 2,
  };
  // string info = 1;
  void clear_info() ;
  const std::string& info() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_info(Arg_&& arg, Args_... args);
  std::string* mutable_info();
  PROTOBUF_NODISCARD std::string* release_info();
  void set_allocated_info(std::string* value);

  private:
  const std::string& _internal_info() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_info(
      const std::string& value);
  std::string* _internal_mutable_info();

  public:
  // optional string orderbook = 3;
  bool has_orderbook() const;
  void clear_orderbook() ;
  const std::string& orderbook() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_orderbook(Arg_&& arg, Args_... args);
  std::string* mutable_orderbook();
  PROTOBUF_NODISCARD std::string* release_orderbook();
  void set_allocated_orderbook(std::string* value);

  private:
  const std::string& _internal_orderbook() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_orderbook(
      const std::string& value);
  std::string* _internal_mutable_orderbook();

  public:
  // optional string product = 4;
  bool has_product() const;
  void clear_product() ;
  const std::string& product() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_product(Arg_&& arg, Args_... args);
  std::string* mutable_product();
  PROTOBUF_NODISCARD std::string* release_product();
  void set_allocated_product(std::string* value);

  private:
  const std::string& _internal_product() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_product(
      const std::string& value);
  std::string* _internal_mutable_product();

  public:
  // optional string comment = 5;
  bool has_comment() const;
  void clear_comment() ;
  const std::string& comment() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_comment(Arg_&& arg, Args_... args);
  std::string* mutable_comment();
  PROTOBUF_NODISCARD std::string* release_comment();
  void set_allocated_comment(std::string* value);

  private:
  const std::string& _internal_comment() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_comment(
      const std::string& value);
  std::string* _internal_mutable_comment();

  public:
  // bool validation = 2;
  void clear_validation() ;
  bool validation() const;
  void set_validation(bool value);

  private:
  bool _internal_validation() const;
  void _internal_set_validation(bool value);

  public:
  // @@protoc_insertion_point(class_scope:marketAccess.OrderBookContent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      65, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OrderBookContent_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderBookContent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr info_;
    ::google::protobuf::internal::ArenaStringPtr orderbook_;
    ::google::protobuf::internal::ArenaStringPtr product_;
    ::google::protobuf::internal::ArenaStringPtr comment_;
    bool validation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fMarketAccess_2eproto;
};
// -------------------------------------------------------------------

class InsertionParameters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketAccess.InsertionParameters) */ {
 public:
  inline InsertionParameters() : InsertionParameters(nullptr) {}
  ~InsertionParameters() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InsertionParameters(
      ::google::protobuf::internal::ConstantInitialized);

  inline InsertionParameters(const InsertionParameters& from) : InsertionParameters(nullptr, from) {}
  inline InsertionParameters(InsertionParameters&& from) noexcept
      : InsertionParameters(nullptr, std::move(from)) {}
  inline InsertionParameters& operator=(const InsertionParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline InsertionParameters& operator=(InsertionParameters&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InsertionParameters& default_instance() {
    return *internal_default_instance();
  }
  static inline const InsertionParameters* internal_default_instance() {
    return reinterpret_cast<const InsertionParameters*>(
        &_InsertionParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(InsertionParameters& a, InsertionParameters& b) { a.Swap(&b); }
  inline void Swap(InsertionParameters* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InsertionParameters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InsertionParameters* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<InsertionParameters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InsertionParameters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InsertionParameters& from) { InsertionParameters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InsertionParameters* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "marketAccess.InsertionParameters"; }

 protected:
  explicit InsertionParameters(::google::protobuf::Arena* arena);
  InsertionParameters(::google::protobuf::Arena* arena, const InsertionParameters& from);
  InsertionParameters(::google::protobuf::Arena* arena, InsertionParameters&& from) noexcept
      : InsertionParameters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUseridFieldNumber = 2,
    kInfoFieldNumber = 1,
    kPriceFieldNumber = 3,
    kVolumeFieldNumber = 4,
    kBuyOrSellFieldNumber = 5,
    kBoTypeFieldNumber = 6,
  };
  // string userid = 2;
  void clear_userid() ;
  const std::string& userid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_userid(Arg_&& arg, Args_... args);
  std::string* mutable_userid();
  PROTOBUF_NODISCARD std::string* release_userid();
  void set_allocated_userid(std::string* value);

  private:
  const std::string& _internal_userid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_userid(
      const std::string& value);
  std::string* _internal_mutable_userid();

  public:
  // uint64 info = 1;
  void clear_info() ;
  ::uint64_t info() const;
  void set_info(::uint64_t value);

  private:
  ::uint64_t _internal_info() const;
  void _internal_set_info(::uint64_t value);

  public:
  // double price = 3;
  void clear_price() ;
  double price() const;
  void set_price(double value);

  private:
  double _internal_price() const;
  void _internal_set_price(double value);

  public:
  // double volume = 4;
  void clear_volume() ;
  double volume() const;
  void set_volume(double value);

  private:
  double _internal_volume() const;
  void _internal_set_volume(double value);

  public:
  // .marketAccess.orderDirection buyOrSell = 5;
  void clear_buyorsell() ;
  ::marketAccess::orderDirection buyorsell() const;
  void set_buyorsell(::marketAccess::orderDirection value);

  private:
  ::marketAccess::orderDirection _internal_buyorsell() const;
  void _internal_set_buyorsell(::marketAccess::orderDirection value);

  public:
  // .marketAccess.orderType boType = 6;
  void clear_botype() ;
  ::marketAccess::orderType botype() const;
  void set_botype(::marketAccess::orderType value);

  private:
  ::marketAccess::orderType _internal_botype() const;
  void _internal_set_botype(::marketAccess::orderType value);

  public:
  // @@protoc_insertion_point(class_scope:marketAccess.InsertionParameters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      47, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_InsertionParameters_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InsertionParameters& from_msg);
    ::google::protobuf::internal::ArenaStringPtr userid_;
    ::uint64_t info_;
    double price_;
    double volume_;
    int buyorsell_;
    int botype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fMarketAccess_2eproto;
};
// -------------------------------------------------------------------

class InsertionConfirmation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketAccess.InsertionConfirmation) */ {
 public:
  inline InsertionConfirmation() : InsertionConfirmation(nullptr) {}
  ~InsertionConfirmation() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InsertionConfirmation(
      ::google::protobuf::internal::ConstantInitialized);

  inline InsertionConfirmation(const InsertionConfirmation& from) : InsertionConfirmation(nullptr, from) {}
  inline InsertionConfirmation(InsertionConfirmation&& from) noexcept
      : InsertionConfirmation(nullptr, std::move(from)) {}
  inline InsertionConfirmation& operator=(const InsertionConfirmation& from) {
    CopyFrom(from);
    return *this;
  }
  inline InsertionConfirmation& operator=(InsertionConfirmation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InsertionConfirmation& default_instance() {
    return *internal_default_instance();
  }
  static inline const InsertionConfirmation* internal_default_instance() {
    return reinterpret_cast<const InsertionConfirmation*>(
        &_InsertionConfirmation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(InsertionConfirmation& a, InsertionConfirmation& b) { a.Swap(&b); }
  inline void Swap(InsertionConfirmation* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InsertionConfirmation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InsertionConfirmation* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<InsertionConfirmation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InsertionConfirmation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InsertionConfirmation& from) { InsertionConfirmation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InsertionConfirmation* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "marketAccess.InsertionConfirmation"; }

 protected:
  explicit InsertionConfirmation(::google::protobuf::Arena* arena);
  InsertionConfirmation(::google::protobuf::Arena* arena, const InsertionConfirmation& from);
  InsertionConfirmation(::google::protobuf::Arena* arena, InsertionConfirmation&& from) noexcept
      : InsertionConfirmation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfoFieldNumber = 1,
    kProductFieldNumber = 7,
    kCommentFieldNumber = 8,
    kBoidFieldNumber = 3,
    kValidationFieldNumber = 2,
    kVersionFieldNumber = 4,
    kPriceFieldNumber = 5,
    kVolumeFieldNumber = 6,
  };
  // string info = 1;
  void clear_info() ;
  const std::string& info() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_info(Arg_&& arg, Args_... args);
  std::string* mutable_info();
  PROTOBUF_NODISCARD std::string* release_info();
  void set_allocated_info(std::string* value);

  private:
  const std::string& _internal_info() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_info(
      const std::string& value);
  std::string* _internal_mutable_info();

  public:
  // string product = 7;
  void clear_product() ;
  const std::string& product() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_product(Arg_&& arg, Args_... args);
  std::string* mutable_product();
  PROTOBUF_NODISCARD std::string* release_product();
  void set_allocated_product(std::string* value);

  private:
  const std::string& _internal_product() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_product(
      const std::string& value);
  std::string* _internal_mutable_product();

  public:
  // optional string comment = 8;
  bool has_comment() const;
  void clear_comment() ;
  const std::string& comment() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_comment(Arg_&& arg, Args_... args);
  std::string* mutable_comment();
  PROTOBUF_NODISCARD std::string* release_comment();
  void set_allocated_comment(std::string* value);

  private:
  const std::string& _internal_comment() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_comment(
      const std::string& value);
  std::string* _internal_mutable_comment();

  public:
  // uint64 boid = 3;
  void clear_boid() ;
  ::uint64_t boid() const;
  void set_boid(::uint64_t value);

  private:
  ::uint64_t _internal_boid() const;
  void _internal_set_boid(::uint64_t value);

  public:
  // bool validation = 2;
  void clear_validation() ;
  bool validation() const;
  void set_validation(bool value);

  private:
  bool _internal_validation() const;
  void _internal_set_validation(bool value);

  public:
  // uint32 version = 4;
  void clear_version() ;
  ::uint32_t version() const;
  void set_version(::uint32_t value);

  private:
  ::uint32_t _internal_version() const;
  void _internal_set_version(::uint32_t value);

  public:
  // double price = 5;
  void clear_price() ;
  double price() const;
  void set_price(double value);

  private:
  double _internal_price() const;
  void _internal_set_price(double value);

  public:
  // double volume = 6;
  void clear_volume() ;
  double volume() const;
  void set_volume(double value);

  private:
  double _internal_volume() const;
  void _internal_set_volume(double value);

  public:
  // @@protoc_insertion_point(class_scope:marketAccess.InsertionConfirmation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      69, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_InsertionConfirmation_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InsertionConfirmation& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr info_;
    ::google::protobuf::internal::ArenaStringPtr product_;
    ::google::protobuf::internal::ArenaStringPtr comment_;
    ::uint64_t boid_;
    bool validation_;
    ::uint32_t version_;
    double price_;
    double volume_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fMarketAccess_2eproto;
};
// -------------------------------------------------------------------

class DisplayParameters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketAccess.DisplayParameters) */ {
 public:
  inline DisplayParameters() : DisplayParameters(nullptr) {}
  ~DisplayParameters() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DisplayParameters(
      ::google::protobuf::internal::ConstantInitialized);

  inline DisplayParameters(const DisplayParameters& from) : DisplayParameters(nullptr, from) {}
  inline DisplayParameters(DisplayParameters&& from) noexcept
      : DisplayParameters(nullptr, std::move(from)) {}
  inline DisplayParameters& operator=(const DisplayParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline DisplayParameters& operator=(DisplayParameters&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DisplayParameters& default_instance() {
    return *internal_default_instance();
  }
  static inline const DisplayParameters* internal_default_instance() {
    return reinterpret_cast<const DisplayParameters*>(
        &_DisplayParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(DisplayParameters& a, DisplayParameters& b) { a.Swap(&b); }
  inline void Swap(DisplayParameters* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DisplayParameters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DisplayParameters* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DisplayParameters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DisplayParameters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DisplayParameters& from) { DisplayParameters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DisplayParameters* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "marketAccess.DisplayParameters"; }

 protected:
  explicit DisplayParameters(::google::protobuf::Arena* arena);
  DisplayParameters(::google::protobuf::Arena* arena, const DisplayParameters& from);
  DisplayParameters(::google::protobuf::Arena* arena, DisplayParameters&& from) noexcept
      : DisplayParameters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfoFieldNumber = 1,
    kNboforderstodisplayFieldNumber = 2,
  };
  // uint64 info = 1;
  void clear_info() ;
  ::uint64_t info() const;
  void set_info(::uint64_t value);

  private:
  ::uint64_t _internal_info() const;
  void _internal_set_info(::uint64_t value);

  public:
  // uint32 nboforderstodisplay = 2;
  void clear_nboforderstodisplay() ;
  ::uint32_t nboforderstodisplay() const;
  void set_nboforderstodisplay(::uint32_t value);

  private:
  ::uint32_t _internal_nboforderstodisplay() const;
  void _internal_set_nboforderstodisplay(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:marketAccess.DisplayParameters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DisplayParameters_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DisplayParameters& from_msg);
    ::uint64_t info_;
    ::uint32_t nboforderstodisplay_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fMarketAccess_2eproto;
};
// -------------------------------------------------------------------

class DeletionParameters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketAccess.DeletionParameters) */ {
 public:
  inline DeletionParameters() : DeletionParameters(nullptr) {}
  ~DeletionParameters() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeletionParameters(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeletionParameters(const DeletionParameters& from) : DeletionParameters(nullptr, from) {}
  inline DeletionParameters(DeletionParameters&& from) noexcept
      : DeletionParameters(nullptr, std::move(from)) {}
  inline DeletionParameters& operator=(const DeletionParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeletionParameters& operator=(DeletionParameters&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeletionParameters& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeletionParameters* internal_default_instance() {
    return reinterpret_cast<const DeletionParameters*>(
        &_DeletionParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(DeletionParameters& a, DeletionParameters& b) { a.Swap(&b); }
  inline void Swap(DeletionParameters* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeletionParameters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeletionParameters* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DeletionParameters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeletionParameters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeletionParameters& from) { DeletionParameters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeletionParameters* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "marketAccess.DeletionParameters"; }

 protected:
  explicit DeletionParameters(::google::protobuf::Arena* arena);
  DeletionParameters(::google::protobuf::Arena* arena, const DeletionParameters& from);
  DeletionParameters(::google::protobuf::Arena* arena, DeletionParameters&& from) noexcept
      : DeletionParameters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUseridFieldNumber = 2,
    kInfoFieldNumber = 1,
    kBoidFieldNumber = 3,
    kVersionFieldNumber = 4,
  };
  // string userid = 2;
  void clear_userid() ;
  const std::string& userid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_userid(Arg_&& arg, Args_... args);
  std::string* mutable_userid();
  PROTOBUF_NODISCARD std::string* release_userid();
  void set_allocated_userid(std::string* value);

  private:
  const std::string& _internal_userid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_userid(
      const std::string& value);
  std::string* _internal_mutable_userid();

  public:
  // uint64 info = 1;
  void clear_info() ;
  ::uint64_t info() const;
  void set_info(::uint64_t value);

  private:
  ::uint64_t _internal_info() const;
  void _internal_set_info(::uint64_t value);

  public:
  // uint64 boid = 3;
  void clear_boid() ;
  ::uint64_t boid() const;
  void set_boid(::uint64_t value);

  private:
  ::uint64_t _internal_boid() const;
  void _internal_set_boid(::uint64_t value);

  public:
  // uint32 version = 4;
  void clear_version() ;
  ::uint32_t version() const;
  void set_version(::uint32_t value);

  private:
  ::uint32_t _internal_version() const;
  void _internal_set_version(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:marketAccess.DeletionParameters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DeletionParameters_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeletionParameters& from_msg);
    ::google::protobuf::internal::ArenaStringPtr userid_;
    ::uint64_t info_;
    ::uint64_t boid_;
    ::uint32_t version_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fMarketAccess_2eproto;
};
// -------------------------------------------------------------------

class DeletionConfirmation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketAccess.DeletionConfirmation) */ {
 public:
  inline DeletionConfirmation() : DeletionConfirmation(nullptr) {}
  ~DeletionConfirmation() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeletionConfirmation(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeletionConfirmation(const DeletionConfirmation& from) : DeletionConfirmation(nullptr, from) {}
  inline DeletionConfirmation(DeletionConfirmation&& from) noexcept
      : DeletionConfirmation(nullptr, std::move(from)) {}
  inline DeletionConfirmation& operator=(const DeletionConfirmation& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeletionConfirmation& operator=(DeletionConfirmation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeletionConfirmation& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeletionConfirmation* internal_default_instance() {
    return reinterpret_cast<const DeletionConfirmation*>(
        &_DeletionConfirmation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(DeletionConfirmation& a, DeletionConfirmation& b) { a.Swap(&b); }
  inline void Swap(DeletionConfirmation* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeletionConfirmation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeletionConfirmation* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DeletionConfirmation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeletionConfirmation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeletionConfirmation& from) { DeletionConfirmation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeletionConfirmation* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "marketAccess.DeletionConfirmation"; }

 protected:
  explicit DeletionConfirmation(::google::protobuf::Arena* arena);
  DeletionConfirmation(::google::protobuf::Arena* arena, const DeletionConfirmation& from);
  DeletionConfirmation(::google::protobuf::Arena* arena, DeletionConfirmation&& from) noexcept
      : DeletionConfirmation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfoFieldNumber = 1,
    kProductFieldNumber = 3,
    kCommentFieldNumber = 5,
    kBoidFieldNumber = 4,
    kValidationFieldNumber = 2,
    kVersionFieldNumber = 6,
    kPriceFieldNumber = 7,
    kVolumeFieldNumber = 8,
  };
  // string info = 1;
  void clear_info() ;
  const std::string& info() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_info(Arg_&& arg, Args_... args);
  std::string* mutable_info();
  PROTOBUF_NODISCARD std::string* release_info();
  void set_allocated_info(std::string* value);

  private:
  const std::string& _internal_info() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_info(
      const std::string& value);
  std::string* _internal_mutable_info();

  public:
  // string product = 3;
  void clear_product() ;
  const std::string& product() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_product(Arg_&& arg, Args_... args);
  std::string* mutable_product();
  PROTOBUF_NODISCARD std::string* release_product();
  void set_allocated_product(std::string* value);

  private:
  const std::string& _internal_product() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_product(
      const std::string& value);
  std::string* _internal_mutable_product();

  public:
  // optional string comment = 5;
  bool has_comment() const;
  void clear_comment() ;
  const std::string& comment() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_comment(Arg_&& arg, Args_... args);
  std::string* mutable_comment();
  PROTOBUF_NODISCARD std::string* release_comment();
  void set_allocated_comment(std::string* value);

  private:
  const std::string& _internal_comment() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_comment(
      const std::string& value);
  std::string* _internal_mutable_comment();

  public:
  // optional uint64 boid = 4;
  bool has_boid() const;
  void clear_boid() ;
  ::uint64_t boid() const;
  void set_boid(::uint64_t value);

  private:
  ::uint64_t _internal_boid() const;
  void _internal_set_boid(::uint64_t value);

  public:
  // bool validation = 2;
  void clear_validation() ;
  bool validation() const;
  void set_validation(bool value);

  private:
  bool _internal_validation() const;
  void _internal_set_validation(bool value);

  public:
  // optional uint32 version = 6;
  bool has_version() const;
  void clear_version() ;
  ::uint32_t version() const;
  void set_version(::uint32_t value);

  private:
  ::uint32_t _internal_version() const;
  void _internal_set_version(::uint32_t value);

  public:
  // optional double price = 7;
  bool has_price() const;
  void clear_price() ;
  double price() const;
  void set_price(double value);

  private:
  double _internal_price() const;
  void _internal_set_price(double value);

  public:
  // optional double volume = 8;
  bool has_volume() const;
  void clear_volume() ;
  double volume() const;
  void set_volume(double value);

  private:
  double _internal_volume() const;
  void _internal_set_volume(double value);

  public:
  // @@protoc_insertion_point(class_scope:marketAccess.DeletionConfirmation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      68, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DeletionConfirmation_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeletionConfirmation& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr info_;
    ::google::protobuf::internal::ArenaStringPtr product_;
    ::google::protobuf::internal::ArenaStringPtr comment_;
    ::uint64_t boid_;
    bool validation_;
    ::uint32_t version_;
    double price_;
    double volume_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fMarketAccess_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DisplayParameters

// uint64 info = 1;
inline void DisplayParameters::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_ = ::uint64_t{0u};
}
inline ::uint64_t DisplayParameters::info() const {
  // @@protoc_insertion_point(field_get:marketAccess.DisplayParameters.info)
  return _internal_info();
}
inline void DisplayParameters::set_info(::uint64_t value) {
  _internal_set_info(value);
  // @@protoc_insertion_point(field_set:marketAccess.DisplayParameters.info)
}
inline ::uint64_t DisplayParameters::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.info_;
}
inline void DisplayParameters::_internal_set_info(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_ = value;
}

// uint32 nboforderstodisplay = 2;
inline void DisplayParameters::clear_nboforderstodisplay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nboforderstodisplay_ = 0u;
}
inline ::uint32_t DisplayParameters::nboforderstodisplay() const {
  // @@protoc_insertion_point(field_get:marketAccess.DisplayParameters.nboforderstodisplay)
  return _internal_nboforderstodisplay();
}
inline void DisplayParameters::set_nboforderstodisplay(::uint32_t value) {
  _internal_set_nboforderstodisplay(value);
  // @@protoc_insertion_point(field_set:marketAccess.DisplayParameters.nboforderstodisplay)
}
inline ::uint32_t DisplayParameters::_internal_nboforderstodisplay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nboforderstodisplay_;
}
inline void DisplayParameters::_internal_set_nboforderstodisplay(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nboforderstodisplay_ = value;
}

// -------------------------------------------------------------------

// OrderBookContent

// string info = 1;
inline void OrderBookContent::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.ClearToEmpty();
}
inline const std::string& OrderBookContent::info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.OrderBookContent.info)
  return _internal_info();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderBookContent::set_info(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.OrderBookContent.info)
}
inline std::string* OrderBookContent::mutable_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:marketAccess.OrderBookContent.info)
  return _s;
}
inline const std::string& OrderBookContent::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.info_.Get();
}
inline void OrderBookContent::_internal_set_info(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.Set(value, GetArena());
}
inline std::string* OrderBookContent::_internal_mutable_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.info_.Mutable( GetArena());
}
inline std::string* OrderBookContent::release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.OrderBookContent.info)
  return _impl_.info_.Release();
}
inline void OrderBookContent::set_allocated_info(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.info_.IsDefault()) {
          _impl_.info_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.OrderBookContent.info)
}

// bool validation = 2;
inline void OrderBookContent::clear_validation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_ = false;
}
inline bool OrderBookContent::validation() const {
  // @@protoc_insertion_point(field_get:marketAccess.OrderBookContent.validation)
  return _internal_validation();
}
inline void OrderBookContent::set_validation(bool value) {
  _internal_set_validation(value);
  // @@protoc_insertion_point(field_set:marketAccess.OrderBookContent.validation)
}
inline bool OrderBookContent::_internal_validation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validation_;
}
inline void OrderBookContent::_internal_set_validation(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_ = value;
}

// optional string orderbook = 3;
inline bool OrderBookContent::has_orderbook() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OrderBookContent::clear_orderbook() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.orderbook_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& OrderBookContent::orderbook() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.OrderBookContent.orderbook)
  return _internal_orderbook();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderBookContent::set_orderbook(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.orderbook_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.OrderBookContent.orderbook)
}
inline std::string* OrderBookContent::mutable_orderbook() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_orderbook();
  // @@protoc_insertion_point(field_mutable:marketAccess.OrderBookContent.orderbook)
  return _s;
}
inline const std::string& OrderBookContent::_internal_orderbook() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.orderbook_.Get();
}
inline void OrderBookContent::_internal_set_orderbook(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.orderbook_.Set(value, GetArena());
}
inline std::string* OrderBookContent::_internal_mutable_orderbook() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.orderbook_.Mutable( GetArena());
}
inline std::string* OrderBookContent::release_orderbook() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.OrderBookContent.orderbook)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.orderbook_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.orderbook_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void OrderBookContent::set_allocated_orderbook(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.orderbook_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.orderbook_.IsDefault()) {
          _impl_.orderbook_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.OrderBookContent.orderbook)
}

// optional string product = 4;
inline bool OrderBookContent::has_product() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void OrderBookContent::clear_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& OrderBookContent::product() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.OrderBookContent.product)
  return _internal_product();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderBookContent::set_product(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.product_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.OrderBookContent.product)
}
inline std::string* OrderBookContent::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:marketAccess.OrderBookContent.product)
  return _s;
}
inline const std::string& OrderBookContent::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_.Get();
}
inline void OrderBookContent::_internal_set_product(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.product_.Set(value, GetArena());
}
inline std::string* OrderBookContent::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.product_.Mutable( GetArena());
}
inline std::string* OrderBookContent::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.OrderBookContent.product)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.product_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.product_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void OrderBookContent::set_allocated_product(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.product_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.product_.IsDefault()) {
          _impl_.product_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.OrderBookContent.product)
}

// optional string comment = 5;
inline bool OrderBookContent::has_comment() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void OrderBookContent::clear_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& OrderBookContent::comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.OrderBookContent.comment)
  return _internal_comment();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderBookContent::set_comment(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.comment_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.OrderBookContent.comment)
}
inline std::string* OrderBookContent::mutable_comment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_comment();
  // @@protoc_insertion_point(field_mutable:marketAccess.OrderBookContent.comment)
  return _s;
}
inline const std::string& OrderBookContent::_internal_comment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comment_.Get();
}
inline void OrderBookContent::_internal_set_comment(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.comment_.Set(value, GetArena());
}
inline std::string* OrderBookContent::_internal_mutable_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.comment_.Mutable( GetArena());
}
inline std::string* OrderBookContent::release_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.OrderBookContent.comment)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.comment_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.comment_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void OrderBookContent::set_allocated_comment(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.comment_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.comment_.IsDefault()) {
          _impl_.comment_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.OrderBookContent.comment)
}

// -------------------------------------------------------------------

// DeletionParameters

// uint64 info = 1;
inline void DeletionParameters::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_ = ::uint64_t{0u};
}
inline ::uint64_t DeletionParameters::info() const {
  // @@protoc_insertion_point(field_get:marketAccess.DeletionParameters.info)
  return _internal_info();
}
inline void DeletionParameters::set_info(::uint64_t value) {
  _internal_set_info(value);
  // @@protoc_insertion_point(field_set:marketAccess.DeletionParameters.info)
}
inline ::uint64_t DeletionParameters::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.info_;
}
inline void DeletionParameters::_internal_set_info(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_ = value;
}

// string userid = 2;
inline void DeletionParameters::clear_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_.ClearToEmpty();
}
inline const std::string& DeletionParameters::userid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.DeletionParameters.userid)
  return _internal_userid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeletionParameters::set_userid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.DeletionParameters.userid)
}
inline std::string* DeletionParameters::mutable_userid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_userid();
  // @@protoc_insertion_point(field_mutable:marketAccess.DeletionParameters.userid)
  return _s;
}
inline const std::string& DeletionParameters::_internal_userid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.userid_.Get();
}
inline void DeletionParameters::_internal_set_userid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_.Set(value, GetArena());
}
inline std::string* DeletionParameters::_internal_mutable_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.userid_.Mutable( GetArena());
}
inline std::string* DeletionParameters::release_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.DeletionParameters.userid)
  return _impl_.userid_.Release();
}
inline void DeletionParameters::set_allocated_userid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.userid_.IsDefault()) {
          _impl_.userid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.DeletionParameters.userid)
}

// uint64 boid = 3;
inline void DeletionParameters::clear_boid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = ::uint64_t{0u};
}
inline ::uint64_t DeletionParameters::boid() const {
  // @@protoc_insertion_point(field_get:marketAccess.DeletionParameters.boid)
  return _internal_boid();
}
inline void DeletionParameters::set_boid(::uint64_t value) {
  _internal_set_boid(value);
  // @@protoc_insertion_point(field_set:marketAccess.DeletionParameters.boid)
}
inline ::uint64_t DeletionParameters::_internal_boid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.boid_;
}
inline void DeletionParameters::_internal_set_boid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = value;
}

// uint32 version = 4;
inline void DeletionParameters::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0u;
}
inline ::uint32_t DeletionParameters::version() const {
  // @@protoc_insertion_point(field_get:marketAccess.DeletionParameters.version)
  return _internal_version();
}
inline void DeletionParameters::set_version(::uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:marketAccess.DeletionParameters.version)
}
inline ::uint32_t DeletionParameters::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void DeletionParameters::_internal_set_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// -------------------------------------------------------------------

// DeletionConfirmation

// string info = 1;
inline void DeletionConfirmation::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.ClearToEmpty();
}
inline const std::string& DeletionConfirmation::info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.DeletionConfirmation.info)
  return _internal_info();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeletionConfirmation::set_info(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.DeletionConfirmation.info)
}
inline std::string* DeletionConfirmation::mutable_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:marketAccess.DeletionConfirmation.info)
  return _s;
}
inline const std::string& DeletionConfirmation::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.info_.Get();
}
inline void DeletionConfirmation::_internal_set_info(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.Set(value, GetArena());
}
inline std::string* DeletionConfirmation::_internal_mutable_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.info_.Mutable( GetArena());
}
inline std::string* DeletionConfirmation::release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.DeletionConfirmation.info)
  return _impl_.info_.Release();
}
inline void DeletionConfirmation::set_allocated_info(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.info_.IsDefault()) {
          _impl_.info_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.DeletionConfirmation.info)
}

// bool validation = 2;
inline void DeletionConfirmation::clear_validation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_ = false;
}
inline bool DeletionConfirmation::validation() const {
  // @@protoc_insertion_point(field_get:marketAccess.DeletionConfirmation.validation)
  return _internal_validation();
}
inline void DeletionConfirmation::set_validation(bool value) {
  _internal_set_validation(value);
  // @@protoc_insertion_point(field_set:marketAccess.DeletionConfirmation.validation)
}
inline bool DeletionConfirmation::_internal_validation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validation_;
}
inline void DeletionConfirmation::_internal_set_validation(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_ = value;
}

// string product = 3;
inline void DeletionConfirmation::clear_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_.ClearToEmpty();
}
inline const std::string& DeletionConfirmation::product() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.DeletionConfirmation.product)
  return _internal_product();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeletionConfirmation::set_product(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.DeletionConfirmation.product)
}
inline std::string* DeletionConfirmation::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:marketAccess.DeletionConfirmation.product)
  return _s;
}
inline const std::string& DeletionConfirmation::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_.Get();
}
inline void DeletionConfirmation::_internal_set_product(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_.Set(value, GetArena());
}
inline std::string* DeletionConfirmation::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.product_.Mutable( GetArena());
}
inline std::string* DeletionConfirmation::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.DeletionConfirmation.product)
  return _impl_.product_.Release();
}
inline void DeletionConfirmation::set_allocated_product(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.product_.IsDefault()) {
          _impl_.product_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.DeletionConfirmation.product)
}

// optional uint64 boid = 4;
inline bool DeletionConfirmation::has_boid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void DeletionConfirmation::clear_boid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t DeletionConfirmation::boid() const {
  // @@protoc_insertion_point(field_get:marketAccess.DeletionConfirmation.boid)
  return _internal_boid();
}
inline void DeletionConfirmation::set_boid(::uint64_t value) {
  _internal_set_boid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:marketAccess.DeletionConfirmation.boid)
}
inline ::uint64_t DeletionConfirmation::_internal_boid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.boid_;
}
inline void DeletionConfirmation::_internal_set_boid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = value;
}

// optional string comment = 5;
inline bool DeletionConfirmation::has_comment() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void DeletionConfirmation::clear_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& DeletionConfirmation::comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.DeletionConfirmation.comment)
  return _internal_comment();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeletionConfirmation::set_comment(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.comment_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.DeletionConfirmation.comment)
}
inline std::string* DeletionConfirmation::mutable_comment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_comment();
  // @@protoc_insertion_point(field_mutable:marketAccess.DeletionConfirmation.comment)
  return _s;
}
inline const std::string& DeletionConfirmation::_internal_comment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comment_.Get();
}
inline void DeletionConfirmation::_internal_set_comment(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.comment_.Set(value, GetArena());
}
inline std::string* DeletionConfirmation::_internal_mutable_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.comment_.Mutable( GetArena());
}
inline std::string* DeletionConfirmation::release_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.DeletionConfirmation.comment)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.comment_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.comment_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void DeletionConfirmation::set_allocated_comment(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.comment_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.comment_.IsDefault()) {
          _impl_.comment_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.DeletionConfirmation.comment)
}

// optional uint32 version = 6;
inline bool DeletionConfirmation::has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void DeletionConfirmation::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t DeletionConfirmation::version() const {
  // @@protoc_insertion_point(field_get:marketAccess.DeletionConfirmation.version)
  return _internal_version();
}
inline void DeletionConfirmation::set_version(::uint32_t value) {
  _internal_set_version(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:marketAccess.DeletionConfirmation.version)
}
inline ::uint32_t DeletionConfirmation::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void DeletionConfirmation::_internal_set_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// optional double price = 7;
inline bool DeletionConfirmation::has_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void DeletionConfirmation::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double DeletionConfirmation::price() const {
  // @@protoc_insertion_point(field_get:marketAccess.DeletionConfirmation.price)
  return _internal_price();
}
inline void DeletionConfirmation::set_price(double value) {
  _internal_set_price(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:marketAccess.DeletionConfirmation.price)
}
inline double DeletionConfirmation::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void DeletionConfirmation::_internal_set_price(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// optional double volume = 8;
inline bool DeletionConfirmation::has_volume() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void DeletionConfirmation::clear_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double DeletionConfirmation::volume() const {
  // @@protoc_insertion_point(field_get:marketAccess.DeletionConfirmation.volume)
  return _internal_volume();
}
inline void DeletionConfirmation::set_volume(double value) {
  _internal_set_volume(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:marketAccess.DeletionConfirmation.volume)
}
inline double DeletionConfirmation::_internal_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volume_;
}
inline void DeletionConfirmation::_internal_set_volume(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = value;
}

// -------------------------------------------------------------------

// InsertionParameters

// uint64 info = 1;
inline void InsertionParameters::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_ = ::uint64_t{0u};
}
inline ::uint64_t InsertionParameters::info() const {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionParameters.info)
  return _internal_info();
}
inline void InsertionParameters::set_info(::uint64_t value) {
  _internal_set_info(value);
  // @@protoc_insertion_point(field_set:marketAccess.InsertionParameters.info)
}
inline ::uint64_t InsertionParameters::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.info_;
}
inline void InsertionParameters::_internal_set_info(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_ = value;
}

// string userid = 2;
inline void InsertionParameters::clear_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_.ClearToEmpty();
}
inline const std::string& InsertionParameters::userid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionParameters.userid)
  return _internal_userid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InsertionParameters::set_userid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.InsertionParameters.userid)
}
inline std::string* InsertionParameters::mutable_userid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_userid();
  // @@protoc_insertion_point(field_mutable:marketAccess.InsertionParameters.userid)
  return _s;
}
inline const std::string& InsertionParameters::_internal_userid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.userid_.Get();
}
inline void InsertionParameters::_internal_set_userid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_.Set(value, GetArena());
}
inline std::string* InsertionParameters::_internal_mutable_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.userid_.Mutable( GetArena());
}
inline std::string* InsertionParameters::release_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.InsertionParameters.userid)
  return _impl_.userid_.Release();
}
inline void InsertionParameters::set_allocated_userid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.userid_.IsDefault()) {
          _impl_.userid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.InsertionParameters.userid)
}

// double price = 3;
inline void InsertionParameters::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
}
inline double InsertionParameters::price() const {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionParameters.price)
  return _internal_price();
}
inline void InsertionParameters::set_price(double value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:marketAccess.InsertionParameters.price)
}
inline double InsertionParameters::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void InsertionParameters::_internal_set_price(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// double volume = 4;
inline void InsertionParameters::clear_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = 0;
}
inline double InsertionParameters::volume() const {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionParameters.volume)
  return _internal_volume();
}
inline void InsertionParameters::set_volume(double value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:marketAccess.InsertionParameters.volume)
}
inline double InsertionParameters::_internal_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volume_;
}
inline void InsertionParameters::_internal_set_volume(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = value;
}

// .marketAccess.orderDirection buyOrSell = 5;
inline void InsertionParameters::clear_buyorsell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buyorsell_ = 0;
}
inline ::marketAccess::orderDirection InsertionParameters::buyorsell() const {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionParameters.buyOrSell)
  return _internal_buyorsell();
}
inline void InsertionParameters::set_buyorsell(::marketAccess::orderDirection value) {
  _internal_set_buyorsell(value);
  // @@protoc_insertion_point(field_set:marketAccess.InsertionParameters.buyOrSell)
}
inline ::marketAccess::orderDirection InsertionParameters::_internal_buyorsell() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::marketAccess::orderDirection>(_impl_.buyorsell_);
}
inline void InsertionParameters::_internal_set_buyorsell(::marketAccess::orderDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buyorsell_ = value;
}

// .marketAccess.orderType boType = 6;
inline void InsertionParameters::clear_botype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.botype_ = 0;
}
inline ::marketAccess::orderType InsertionParameters::botype() const {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionParameters.boType)
  return _internal_botype();
}
inline void InsertionParameters::set_botype(::marketAccess::orderType value) {
  _internal_set_botype(value);
  // @@protoc_insertion_point(field_set:marketAccess.InsertionParameters.boType)
}
inline ::marketAccess::orderType InsertionParameters::_internal_botype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::marketAccess::orderType>(_impl_.botype_);
}
inline void InsertionParameters::_internal_set_botype(::marketAccess::orderType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.botype_ = value;
}

// -------------------------------------------------------------------

// InsertionConfirmation

// string info = 1;
inline void InsertionConfirmation::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.ClearToEmpty();
}
inline const std::string& InsertionConfirmation::info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionConfirmation.info)
  return _internal_info();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InsertionConfirmation::set_info(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.InsertionConfirmation.info)
}
inline std::string* InsertionConfirmation::mutable_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:marketAccess.InsertionConfirmation.info)
  return _s;
}
inline const std::string& InsertionConfirmation::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.info_.Get();
}
inline void InsertionConfirmation::_internal_set_info(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.Set(value, GetArena());
}
inline std::string* InsertionConfirmation::_internal_mutable_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.info_.Mutable( GetArena());
}
inline std::string* InsertionConfirmation::release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.InsertionConfirmation.info)
  return _impl_.info_.Release();
}
inline void InsertionConfirmation::set_allocated_info(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.info_.IsDefault()) {
          _impl_.info_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.InsertionConfirmation.info)
}

// bool validation = 2;
inline void InsertionConfirmation::clear_validation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_ = false;
}
inline bool InsertionConfirmation::validation() const {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionConfirmation.validation)
  return _internal_validation();
}
inline void InsertionConfirmation::set_validation(bool value) {
  _internal_set_validation(value);
  // @@protoc_insertion_point(field_set:marketAccess.InsertionConfirmation.validation)
}
inline bool InsertionConfirmation::_internal_validation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validation_;
}
inline void InsertionConfirmation::_internal_set_validation(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_ = value;
}

// uint64 boid = 3;
inline void InsertionConfirmation::clear_boid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = ::uint64_t{0u};
}
inline ::uint64_t InsertionConfirmation::boid() const {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionConfirmation.boid)
  return _internal_boid();
}
inline void InsertionConfirmation::set_boid(::uint64_t value) {
  _internal_set_boid(value);
  // @@protoc_insertion_point(field_set:marketAccess.InsertionConfirmation.boid)
}
inline ::uint64_t InsertionConfirmation::_internal_boid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.boid_;
}
inline void InsertionConfirmation::_internal_set_boid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = value;
}

// uint32 version = 4;
inline void InsertionConfirmation::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0u;
}
inline ::uint32_t InsertionConfirmation::version() const {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionConfirmation.version)
  return _internal_version();
}
inline void InsertionConfirmation::set_version(::uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:marketAccess.InsertionConfirmation.version)
}
inline ::uint32_t InsertionConfirmation::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void InsertionConfirmation::_internal_set_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// double price = 5;
inline void InsertionConfirmation::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
}
inline double InsertionConfirmation::price() const {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionConfirmation.price)
  return _internal_price();
}
inline void InsertionConfirmation::set_price(double value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:marketAccess.InsertionConfirmation.price)
}
inline double InsertionConfirmation::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void InsertionConfirmation::_internal_set_price(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// double volume = 6;
inline void InsertionConfirmation::clear_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = 0;
}
inline double InsertionConfirmation::volume() const {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionConfirmation.volume)
  return _internal_volume();
}
inline void InsertionConfirmation::set_volume(double value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:marketAccess.InsertionConfirmation.volume)
}
inline double InsertionConfirmation::_internal_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volume_;
}
inline void InsertionConfirmation::_internal_set_volume(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = value;
}

// string product = 7;
inline void InsertionConfirmation::clear_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_.ClearToEmpty();
}
inline const std::string& InsertionConfirmation::product() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionConfirmation.product)
  return _internal_product();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InsertionConfirmation::set_product(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.InsertionConfirmation.product)
}
inline std::string* InsertionConfirmation::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:marketAccess.InsertionConfirmation.product)
  return _s;
}
inline const std::string& InsertionConfirmation::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_.Get();
}
inline void InsertionConfirmation::_internal_set_product(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_.Set(value, GetArena());
}
inline std::string* InsertionConfirmation::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.product_.Mutable( GetArena());
}
inline std::string* InsertionConfirmation::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.InsertionConfirmation.product)
  return _impl_.product_.Release();
}
inline void InsertionConfirmation::set_allocated_product(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.product_.IsDefault()) {
          _impl_.product_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.InsertionConfirmation.product)
}

// optional string comment = 8;
inline bool InsertionConfirmation::has_comment() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void InsertionConfirmation::clear_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& InsertionConfirmation::comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.InsertionConfirmation.comment)
  return _internal_comment();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InsertionConfirmation::set_comment(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.comment_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.InsertionConfirmation.comment)
}
inline std::string* InsertionConfirmation::mutable_comment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_comment();
  // @@protoc_insertion_point(field_mutable:marketAccess.InsertionConfirmation.comment)
  return _s;
}
inline const std::string& InsertionConfirmation::_internal_comment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comment_.Get();
}
inline void InsertionConfirmation::_internal_set_comment(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.comment_.Set(value, GetArena());
}
inline std::string* InsertionConfirmation::_internal_mutable_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.comment_.Mutable( GetArena());
}
inline std::string* InsertionConfirmation::release_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.InsertionConfirmation.comment)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.comment_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.comment_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void InsertionConfirmation::set_allocated_comment(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.comment_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.comment_.IsDefault()) {
          _impl_.comment_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.InsertionConfirmation.comment)
}

// -------------------------------------------------------------------

// UpdateParameters

// uint64 info = 1;
inline void UpdateParameters::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_ = ::uint64_t{0u};
}
inline ::uint64_t UpdateParameters::info() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateParameters.info)
  return _internal_info();
}
inline void UpdateParameters::set_info(::uint64_t value) {
  _internal_set_info(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateParameters.info)
}
inline ::uint64_t UpdateParameters::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.info_;
}
inline void UpdateParameters::_internal_set_info(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_ = value;
}

// string userid = 2;
inline void UpdateParameters::clear_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_.ClearToEmpty();
}
inline const std::string& UpdateParameters::userid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateParameters.userid)
  return _internal_userid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateParameters::set_userid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.UpdateParameters.userid)
}
inline std::string* UpdateParameters::mutable_userid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_userid();
  // @@protoc_insertion_point(field_mutable:marketAccess.UpdateParameters.userid)
  return _s;
}
inline const std::string& UpdateParameters::_internal_userid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.userid_.Get();
}
inline void UpdateParameters::_internal_set_userid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_.Set(value, GetArena());
}
inline std::string* UpdateParameters::_internal_mutable_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.userid_.Mutable( GetArena());
}
inline std::string* UpdateParameters::release_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.UpdateParameters.userid)
  return _impl_.userid_.Release();
}
inline void UpdateParameters::set_allocated_userid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.userid_.IsDefault()) {
          _impl_.userid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.UpdateParameters.userid)
}

// uint64 boid = 3;
inline void UpdateParameters::clear_boid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = ::uint64_t{0u};
}
inline ::uint64_t UpdateParameters::boid() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateParameters.boid)
  return _internal_boid();
}
inline void UpdateParameters::set_boid(::uint64_t value) {
  _internal_set_boid(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateParameters.boid)
}
inline ::uint64_t UpdateParameters::_internal_boid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.boid_;
}
inline void UpdateParameters::_internal_set_boid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = value;
}

// double price = 4;
inline void UpdateParameters::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
}
inline double UpdateParameters::price() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateParameters.price)
  return _internal_price();
}
inline void UpdateParameters::set_price(double value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateParameters.price)
}
inline double UpdateParameters::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void UpdateParameters::_internal_set_price(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// double volume = 5;
inline void UpdateParameters::clear_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = 0;
}
inline double UpdateParameters::volume() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateParameters.volume)
  return _internal_volume();
}
inline void UpdateParameters::set_volume(double value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateParameters.volume)
}
inline double UpdateParameters::_internal_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volume_;
}
inline void UpdateParameters::_internal_set_volume(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = value;
}

// .marketAccess.orderDirection buyOrSell = 6;
inline void UpdateParameters::clear_buyorsell() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buyorsell_ = 0;
}
inline ::marketAccess::orderDirection UpdateParameters::buyorsell() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateParameters.buyOrSell)
  return _internal_buyorsell();
}
inline void UpdateParameters::set_buyorsell(::marketAccess::orderDirection value) {
  _internal_set_buyorsell(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateParameters.buyOrSell)
}
inline ::marketAccess::orderDirection UpdateParameters::_internal_buyorsell() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::marketAccess::orderDirection>(_impl_.buyorsell_);
}
inline void UpdateParameters::_internal_set_buyorsell(::marketAccess::orderDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buyorsell_ = value;
}

// .marketAccess.orderType boType = 7;
inline void UpdateParameters::clear_botype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.botype_ = 0;
}
inline ::marketAccess::orderType UpdateParameters::botype() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateParameters.boType)
  return _internal_botype();
}
inline void UpdateParameters::set_botype(::marketAccess::orderType value) {
  _internal_set_botype(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateParameters.boType)
}
inline ::marketAccess::orderType UpdateParameters::_internal_botype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::marketAccess::orderType>(_impl_.botype_);
}
inline void UpdateParameters::_internal_set_botype(::marketAccess::orderType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.botype_ = value;
}

// uint32 version = 8;
inline void UpdateParameters::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0u;
}
inline ::uint32_t UpdateParameters::version() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateParameters.version)
  return _internal_version();
}
inline void UpdateParameters::set_version(::uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateParameters.version)
}
inline ::uint32_t UpdateParameters::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void UpdateParameters::_internal_set_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// -------------------------------------------------------------------

// UpdateConfirmation

// string info = 1;
inline void UpdateConfirmation::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.ClearToEmpty();
}
inline const std::string& UpdateConfirmation::info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateConfirmation.info)
  return _internal_info();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateConfirmation::set_info(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.UpdateConfirmation.info)
}
inline std::string* UpdateConfirmation::mutable_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:marketAccess.UpdateConfirmation.info)
  return _s;
}
inline const std::string& UpdateConfirmation::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.info_.Get();
}
inline void UpdateConfirmation::_internal_set_info(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.Set(value, GetArena());
}
inline std::string* UpdateConfirmation::_internal_mutable_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.info_.Mutable( GetArena());
}
inline std::string* UpdateConfirmation::release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.UpdateConfirmation.info)
  return _impl_.info_.Release();
}
inline void UpdateConfirmation::set_allocated_info(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.info_.IsDefault()) {
          _impl_.info_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.UpdateConfirmation.info)
}

// bool validation = 2;
inline void UpdateConfirmation::clear_validation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_ = false;
}
inline bool UpdateConfirmation::validation() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateConfirmation.validation)
  return _internal_validation();
}
inline void UpdateConfirmation::set_validation(bool value) {
  _internal_set_validation(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateConfirmation.validation)
}
inline bool UpdateConfirmation::_internal_validation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validation_;
}
inline void UpdateConfirmation::_internal_set_validation(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_ = value;
}

// uint64 boid = 3;
inline void UpdateConfirmation::clear_boid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = ::uint64_t{0u};
}
inline ::uint64_t UpdateConfirmation::boid() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateConfirmation.boid)
  return _internal_boid();
}
inline void UpdateConfirmation::set_boid(::uint64_t value) {
  _internal_set_boid(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateConfirmation.boid)
}
inline ::uint64_t UpdateConfirmation::_internal_boid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.boid_;
}
inline void UpdateConfirmation::_internal_set_boid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.boid_ = value;
}

// uint32 version = 4;
inline void UpdateConfirmation::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0u;
}
inline ::uint32_t UpdateConfirmation::version() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateConfirmation.version)
  return _internal_version();
}
inline void UpdateConfirmation::set_version(::uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateConfirmation.version)
}
inline ::uint32_t UpdateConfirmation::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void UpdateConfirmation::_internal_set_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// double price = 5;
inline void UpdateConfirmation::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
}
inline double UpdateConfirmation::price() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateConfirmation.price)
  return _internal_price();
}
inline void UpdateConfirmation::set_price(double value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateConfirmation.price)
}
inline double UpdateConfirmation::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void UpdateConfirmation::_internal_set_price(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// double volume = 6;
inline void UpdateConfirmation::clear_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = 0;
}
inline double UpdateConfirmation::volume() const {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateConfirmation.volume)
  return _internal_volume();
}
inline void UpdateConfirmation::set_volume(double value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:marketAccess.UpdateConfirmation.volume)
}
inline double UpdateConfirmation::_internal_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volume_;
}
inline void UpdateConfirmation::_internal_set_volume(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = value;
}

// string product = 7;
inline void UpdateConfirmation::clear_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_.ClearToEmpty();
}
inline const std::string& UpdateConfirmation::product() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateConfirmation.product)
  return _internal_product();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateConfirmation::set_product(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.UpdateConfirmation.product)
}
inline std::string* UpdateConfirmation::mutable_product() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:marketAccess.UpdateConfirmation.product)
  return _s;
}
inline const std::string& UpdateConfirmation::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_.Get();
}
inline void UpdateConfirmation::_internal_set_product(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_.Set(value, GetArena());
}
inline std::string* UpdateConfirmation::_internal_mutable_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.product_.Mutable( GetArena());
}
inline std::string* UpdateConfirmation::release_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.UpdateConfirmation.product)
  return _impl_.product_.Release();
}
inline void UpdateConfirmation::set_allocated_product(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.product_.IsDefault()) {
          _impl_.product_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.UpdateConfirmation.product)
}

// optional string comment = 8;
inline bool UpdateConfirmation::has_comment() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void UpdateConfirmation::clear_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UpdateConfirmation::comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:marketAccess.UpdateConfirmation.comment)
  return _internal_comment();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateConfirmation::set_comment(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.comment_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:marketAccess.UpdateConfirmation.comment)
}
inline std::string* UpdateConfirmation::mutable_comment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_comment();
  // @@protoc_insertion_point(field_mutable:marketAccess.UpdateConfirmation.comment)
  return _s;
}
inline const std::string& UpdateConfirmation::_internal_comment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comment_.Get();
}
inline void UpdateConfirmation::_internal_set_comment(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.comment_.Set(value, GetArena());
}
inline std::string* UpdateConfirmation::_internal_mutable_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.comment_.Mutable( GetArena());
}
inline std::string* UpdateConfirmation::release_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:marketAccess.UpdateConfirmation.comment)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.comment_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.comment_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UpdateConfirmation::set_allocated_comment(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.comment_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.comment_.IsDefault()) {
          _impl_.comment_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:marketAccess.UpdateConfirmation.comment)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace marketAccess


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::marketAccess::orderType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::marketAccess::orderType>() {
  return ::marketAccess::orderType_descriptor();
}
template <>
struct is_proto_enum<::marketAccess::orderDirection> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::marketAccess::orderDirection>() {
  return ::marketAccess::orderDirection_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_proto_2fMarketAccess_2eproto_2epb_2eh
